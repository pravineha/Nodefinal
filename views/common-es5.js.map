{"version":3,"sources":["webpack:///src/app/utility/index.js"],"names":["groupMeasurementByName","measurements","source","mesurementList","pipe","measurement","name","group","validateEmail","email","re","test"],"mappings":";;;;;;;;;;;;;;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAGO,eAASA,sBAAT,CAAgCC,YAAhC,EAA6C;AACjD,YAAMC,MAAM,GAAG,kDAAKD,YAAL,CAAf,CADiD,CAElD;;AACC,YAAME,cAAc,GAAGD,MAAM,CAACE,IAAP,CACpB,+DAAQ,UAAAC,WAAW;AAAA,iBAAIA,WAAW,CAACC,IAAhB;AAAA,SAAnB,CADoB,EAEpB;AACA,wEAAS,UAAAC,KAAK;AAAA,iBAAIA,KAAK,CAACH,IAAN,CAAW,gEAAX,CAAJ;AAAA,SAAd,CAHoB,CAAvB;AAKA,eAAOD,cAAP;AACF;;AAGM,eAASK,aAAT,CAAuBC,KAAvB,EAA6B;AACjC,YAAMC,EAAE,GAAG,2JAAX;AACD,eAAOA,EAAE,CAACC,IAAH,CAAQF,KAAR,CAAP","file":"common-es5.js","sourcesContent":["import { from } from 'rxjs';\r\nimport { groupBy, mergeMap, toArray } from 'rxjs/operators';\r\n\r\nexport function groupMeasurementByName(measurements){\r\n   const source = from(measurements);\r\n  //  let group =[];\r\n   const mesurementList = source.pipe(\r\n      groupBy(measurement => measurement.name),\r\n      // return each item in group as array\r\n      mergeMap(group => group.pipe(toArray()))\r\n    );  \r\n   return mesurementList;\r\n}\r\n\r\n\r\nexport function validateEmail(email){\r\n   const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n  return re.test(email);\r\n}"]}